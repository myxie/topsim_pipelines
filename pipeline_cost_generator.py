# Copyright (C) 4/3/21 RW Bunney

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

"""
The Pipelines suggested in the SDP parametric model have components. These
pipeline components are what makes up our different pipelines (e.g. continuum
imaging pipeline, spectral etc.). The parametric model provides us with a
calculation of the compute associated with these models.
"""

import pandas as pd

PIPELINE_DATA_CSV = "csv/SKA1_Low_PipelineProducts.csv"

def generate_cost_per_product(workflow, product):
    """
    Produce a cost value per node within the workflow graph for the given
    product.

    For a given workflow, there will be a product from the HPSO (e.g. Grid,
    Subtract Image etc.) which, based on the SDP Parametric Model,
    has a value which is the total expected PFLOP/s expected for that
    component over the lifetime of the workflow.

    As per sdp-par-model.parameters.equations., we know
    the PFlop/s is generated by dividing by o.Tobs (the observation time in
    seconds). From this we can back-calculate total FLOPS/product for the
    entire workflow, and then divide this based on the number of
    product-tasks we have within the workflow.

    Parameters
    ----------
    workflow
    product

    Returns
    -------



    """


if __name__ == '__main__':
    df_pipeline = pd.read_csv(PIPELINE_DATA_CSV)

